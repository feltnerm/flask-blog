// Mixins.less
// - utility classes and functions
// -------------------------------

// Sizing Shortcuts
// ----------------
.size(@width: 5px, @height: 5px) {
    width: @width;
    height: @height;
}

.square(@size: 5px) {
    .size(@size, @size);
}

// Text overflow
.text-overflow() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}


// FONTS
// -----

#font {
    #family {
        .serif() {
            font-family: Georgia, "Times New Roman", Times, Serif;
        }
        .sans-serif() {
            font-family: "Helvetica Neue", Helveitca, Arial, sans-serif;
        }
        .monospace() {
            font-family: Menlo, Monaco, "Courier New", monospace;
        }
    }
    .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
        font-size: @size;
        font-weight: @weight;
        line-height: @lineHeight;
    }
    .serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
        #font > #family > .serif;
        #font > .shorthand(@size, @weight, @lineHeight);
    }
    .sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
        #font > #family > .sans-serif;
        #font > .shorthand(@size, @weight, @lineHeight);
    }
    .monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
        #font > #family > .monospace;
        #font > .shorthand(@size, @weight, @lineHeight);
    }
}


// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Drop shadows
.box-shadow(@shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
      -ms-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}

// Transformations
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}
.translate(@x: 0, @y: 0) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}
.skew(@x: 0, @y: 0) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skew(@x, @y);
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
}
.translate3d(@x: 0, @y: 0, @z: 0) {
  -webkit-transform: translate(@x, @y, @z);
     -moz-transform: translate(@x, @y, @z);
      -ms-transform: translate(@x, @y, @z);
       -o-transform: translate(@x, @y, @z);
          transform: translate(@x, @y, @z);
}

// Form field states
// -----------------

// Mixin for form field states
// ---------------------------
.formFieldState(@textColor: #555, @borderColor: #ccc, @backgroundColor: #f5f5f5) {
  // Set the text color
  > label,
  .help-block,
  .help-inline {
    color: @textColor;
  }
  // Style inputs accordingly
  input,
  select,
  textarea {
    color: @textColor;
    border-color: @borderColor;
    &:focus {
      border-color: darken(@borderColor, 10%);
      .box-shadow(0 0 6px lighten(@borderColor, 20%));
    }
  }
  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on {
    color: @textColor;
    background-color: @backgroundColor;
    border-color: @textColor;
  }
}

// User select
// For selecting text on a page
.user-select(@select) {
    -webkit-user-select: @select;
    -moz-user-select: @select;
    -o-user-select: @select;
    user-select: @select;
}

// Opacity
.opacity(@opacity: 100) {
    opacity: @opacity / 100;
    filter: e(%("alpha(opacity=%d)", @opacity));
}


